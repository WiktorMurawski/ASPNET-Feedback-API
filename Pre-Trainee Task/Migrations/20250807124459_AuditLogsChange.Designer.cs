// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Pre_Trainee_Task.Data;

#nullable disable

namespace Pre_Trainee_Task.Migrations
{
    [DbContext(typeof(FeedbackDbContext))]
    [Migration("20250807124459_AuditLogsChange")]
    partial class AuditLogsChange
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.0");

            modelBuilder.Entity("Pre_Trainee_Task.Models.AuditLogEntry", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<Guid>("FeedbackId")
                        .HasColumnType("TEXT");

                    b.Property<int>("Method")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("AuditLogs");
                });

            modelBuilder.Entity("Pre_Trainee_Task.Models.Feedback", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<int>("Type")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("UserId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Feedbacks");

                    b.HasData(
                        new
                        {
                            Id = new Guid("e0e12545-da81-4c90-9259-61fb9d5a0ae9"),
                            CreatedAt = new DateTime(2025, 8, 7, 12, 44, 58, 705, DateTimeKind.Utc).AddTicks(3441),
                            Message = "Bug description message",
                            Status = 0,
                            Title = "Bug Title",
                            Type = 0,
                            UserId = new Guid("2d546791-bfc1-467a-8fab-48be1130fc91")
                        },
                        new
                        {
                            Id = new Guid("1083acd1-7184-4f69-87f0-c6c2c8d356ca"),
                            CreatedAt = new DateTime(2025, 8, 6, 0, 0, 0, 0, DateTimeKind.Local),
                            Message = "Suggestion description message",
                            Status = 1,
                            Title = "Suggestion Title",
                            Type = 1,
                            UserId = new Guid("55f928b5-2c59-433b-ad04-179e3bffca06")
                        },
                        new
                        {
                            Id = new Guid("2902bd6b-7c51-4b73-9e3e-2ca82d6758a6"),
                            CreatedAt = new DateTime(2025, 7, 31, 12, 44, 58, 705, DateTimeKind.Utc).AddTicks(3647),
                            Message = "Question message",
                            Status = 2,
                            Title = "Question Title",
                            Type = 2,
                            UserId = new Guid("511cf337-5cb7-425c-8993-ab03cb0c2d04")
                        });
                });

            modelBuilder.Entity("Pre_Trainee_Task.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<int>("Role")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("2dfdf577-6749-4107-b576-50616e91bc1b"),
                            Email = "admin@admin.com",
                            PasswordHash = "$2a$11$VOPNgeLmzuxwMK01aCoT/uzpMhXgiew3jMA7brVurLDKvUSDk5iXe",
                            Role = 1
                        },
                        new
                        {
                            Id = new Guid("5a1edbc7-8fe6-4d7b-a560-aa49f858ac94"),
                            Email = "user@user.com",
                            PasswordHash = "$2a$11$khNXzAXpbJADyJkZttu43uzQEzyRu7QiCCIBYNBZ4aPXvZj/7cuIa",
                            Role = 0
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
