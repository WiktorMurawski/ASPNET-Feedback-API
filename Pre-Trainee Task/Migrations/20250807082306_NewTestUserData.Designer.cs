// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Pre_Trainee_Task.Data;

#nullable disable

namespace Pre_Trainee_Task.Migrations
{
    [DbContext(typeof(FeedbackDbContext))]
    [Migration("20250807082306_NewTestUserData")]
    partial class NewTestUserData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.0");

            modelBuilder.Entity("Pre_Trainee_Task.Models.AuditLogEntry", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Actor")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<Guid>("FeedbackId")
                        .HasColumnType("TEXT");

                    b.Property<int>("Method")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("AuditLogs");
                });

            modelBuilder.Entity("Pre_Trainee_Task.Models.Feedback", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<int>("Type")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("UserId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Feedbacks");

                    b.HasData(
                        new
                        {
                            Id = new Guid("fe6aa8d8-8b0b-40a3-9e0a-6b6710132948"),
                            CreatedAt = new DateTime(2025, 8, 7, 8, 23, 5, 516, DateTimeKind.Utc).AddTicks(653),
                            Message = "Bug description message",
                            Status = 0,
                            Title = "Bug Title",
                            Type = 0,
                            UserId = new Guid("df747bf0-c59c-4d0e-ad03-57b3daef53d9")
                        },
                        new
                        {
                            Id = new Guid("51796d6f-12b8-4e3a-a52a-8ed73bfeb2a3"),
                            CreatedAt = new DateTime(2025, 8, 6, 0, 0, 0, 0, DateTimeKind.Local),
                            Message = "Suggestion description message",
                            Status = 1,
                            Title = "Suggestion Title",
                            Type = 1,
                            UserId = new Guid("c2fe8f01-c50a-42ad-9ced-57a7a08e6a53")
                        },
                        new
                        {
                            Id = new Guid("771fd9e5-12b3-45ab-9ddb-185eab01516c"),
                            CreatedAt = new DateTime(2025, 7, 31, 8, 23, 5, 516, DateTimeKind.Utc).AddTicks(978),
                            Message = "Question message",
                            Status = 2,
                            Title = "Question Title",
                            Type = 2,
                            UserId = new Guid("7fb51546-f5e6-4a2d-ad3a-711f1ea14a48")
                        });
                });

            modelBuilder.Entity("Pre_Trainee_Task.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<int>("Role")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("b0c45641-a6bd-4d18-b575-eb258c2e15c4"),
                            Email = "admin@admin.com",
                            PasswordHash = "$2a$11$9/.2Y102RKTiCvo91sI2n.4Riy/TTspYjcryfXGffaL.lH/fTSA/i",
                            Role = 1
                        },
                        new
                        {
                            Id = new Guid("0a8e1a43-1a2b-4ae7-bfd9-058a81cb6ceb"),
                            Email = "user@user.com",
                            PasswordHash = "$2a$11$bffMJwOsVtn2kIEo0RROH.X6WbTdLbj5mdR6NxGbXm8q3kxN.oUty",
                            Role = 0
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
