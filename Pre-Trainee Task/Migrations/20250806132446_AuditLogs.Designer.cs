// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Pre_Trainee_Task.Data;

#nullable disable

namespace Pre_Trainee_Task.Migrations
{
    [DbContext(typeof(FeedbackDbContext))]
    [Migration("20250806132446_AuditLogs")]
    partial class AuditLogs
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.0");

            modelBuilder.Entity("Pre_Trainee_Task.Models.AuditLogEntry", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Actor")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<Guid>("FeedbackId")
                        .HasColumnType("TEXT");

                    b.Property<int>("Method")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("AuditLogs");
                });

            modelBuilder.Entity("Pre_Trainee_Task.Models.Feedback", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<int>("Type")
                        .HasColumnType("INTEGER");

                    b.Property<Guid>("UserId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Feedbacks");

                    b.HasData(
                        new
                        {
                            Id = new Guid("20510160-5b13-4a0a-b66e-2a48e999ccaa"),
                            CreatedAt = new DateTime(2025, 8, 6, 13, 24, 45, 695, DateTimeKind.Utc).AddTicks(9419),
                            Message = "Bug description message",
                            Status = 0,
                            Title = "Bug Title",
                            Type = 0,
                            UserId = new Guid("dbfdb578-3cbc-4b76-b02e-29fd4737535b")
                        },
                        new
                        {
                            Id = new Guid("3fe40238-32a5-4b69-9cad-21fd725b9081"),
                            CreatedAt = new DateTime(2025, 8, 5, 0, 0, 0, 0, DateTimeKind.Local),
                            Message = "Suggestion description message",
                            Status = 1,
                            Title = "Suggestion Title",
                            Type = 1,
                            UserId = new Guid("1ab468bb-57c1-4ee2-9625-5c2e1a042b29")
                        },
                        new
                        {
                            Id = new Guid("4c007bbf-5a54-4400-8400-6888eee3a96d"),
                            CreatedAt = new DateTime(2025, 7, 30, 13, 24, 45, 695, DateTimeKind.Utc).AddTicks(9618),
                            Message = "Question message",
                            Status = 2,
                            Title = "Question Title",
                            Type = 2,
                            UserId = new Guid("62b2e601-bc6f-47f5-bf33-03383c7513b8")
                        });
                });

            modelBuilder.Entity("Pre_Trainee_Task.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<int>("Role")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("559f47a5-7a44-4d9a-bfec-423a26b7ab50"),
                            Email = "admin@admin.com",
                            PasswordHash = "$2a$11$3fHCSriGctlLwgg78CuG5eeFT9rUwVaz8uT.aCG8k1paU1TNAz2PS",
                            Role = 1
                        },
                        new
                        {
                            Id = new Guid("0f1f0773-19f1-44f3-acb0-6cab47c21421"),
                            Email = "user@user.com",
                            PasswordHash = "$2a$11$g1JUp8OQdddHlm/irG1DP.JwwyulCrjIIaBTmmImw4WFYeDK9eOym",
                            Role = 0
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
